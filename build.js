// ============================================
// BUILD-SCRIPT GLIEDERUNG (√úbersicht f√ºr schnelle Navigation)
// ============================================
// Suche im Code nach: "// >>> GLIEDERUNGSPUNKT X: BEZEICHNUNG"
//
// 1. INITIALISIERUNG & SETUP (Module, dist-Ordner, Environment Variables)
// 2. VALIDIERUNG DER ENV-VARIABLEN (Supabase Pflicht, Stripe optional)
// 3. APP.JS VERARBEITEN (Platzhalter ersetzen: Supabase & Stripe)
// 4. SUCCESS.HTML VERARBEITEN (falls vorhanden)
// 5. HAUPTDATEIEN KOPIEREN (index.html, styles.css, viewer.html)
// 6. DSGVO-SEITEN KOPIEREN (impressum, datenschutz, cookies, agb)
// 7. NETLIFY KONFIGURATION ( _redirects + netlify.toml )
// 8. BUILD-ZUSAMMENFASSUNG (Statistik, Status, n√§chste Schritte)

// ============================================
// 1. INITIALISIERUNG & SETUP
// >>> GLIEDERUNGSPUNKT 1: INITIALISIERUNG & SETUP
// ============================================
const fs = require("fs");
const path = require("path");

console.log("Starte Build-Prozess (DSGVO-Edition)...");

// Erstelle dist Ordner
const distDir = path.join(__dirname, "dist");
if (!fs.existsSync(distDir)) {
  fs.mkdirSync(distDir);
  console.log("‚úÖ dist Ordner erstellt");
}

// Hole Environment Variables
const SUPABASE_URL = process.env.SUPABASE_URL;
const SUPABASE_ANON_KEY = process.env.SUPABASE_ANON_KEY;
const STRIPE_PUBLISHABLE_KEY = process.env.STRIPE_PUBLISHABLE_KEY;
const STRIPE_PRICE_BASIC = process.env.STRIPE_PRICE_BASIC;
const STRIPE_PRICE_PREMIUM = process.env.STRIPE_PRICE_PREMIUM;
const STRIPE_PRICE_ELITE = process.env.STRIPE_PRICE_ELITE;

// ============================================
// 2. VALIDIERUNG DER ENV-VARIABLEN
// >>> GLIEDERUNGSPUNKT 2: VALIDIERUNG DER ENV-VARIABLEN
// ============================================
if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
  console.error("‚ùå FEHLER: Supabase Environment Variables fehlen!");
  console.error("Ben√∂tigt: SUPABASE_URL, SUPABASE_ANON_KEY");
  process.exit(1);
}

if (!STRIPE_PUBLISHABLE_KEY) {
  console.warn(
    "‚ö†Ô∏è WARNUNG: STRIPE_PUBLISHABLE_KEY fehlt - Demo-Modus wird verwendet"
  );
}

console.log("\nüìã Environment Variables geladen:");
console.log("   ‚úÖ SUPABASE_URL:", SUPABASE_URL);
console.log(
  "   ‚úÖ SUPABASE_ANON_KEY:",
  SUPABASE_ANON_KEY.substring(0, 20) + "..."
);
console.log(
  "   " + (STRIPE_PUBLISHABLE_KEY ? "‚úÖ" : "‚ö†Ô∏è") + " STRIPE_PUBLISHABLE_KEY:",
  STRIPE_PUBLISHABLE_KEY
    ? STRIPE_PUBLISHABLE_KEY.substring(0, 20) + "..."
    : "nicht gesetzt (Demo-Modus)"
);

// ============================================
// 3. APP.JS VERARBEITEN
// >>> GLIEDERUNGSPUNKT 3: APP.JS VERARBEITEN
// ============================================
console.log("\nüîß Verarbeite app.js...");

let appJs = fs.readFileSync(path.join(__dirname, "app.js"), "utf8");

console.log("Ersetze Platzhalter mit Environment Variables...");

// DEBUG: Zeige die ersten 1000 Zeichen von app.js
console.log("\nüîç DEBUG - Erste Zeilen von app.js:");
const lines = appJs.split("\n").slice(0, 30);
lines.forEach((line, i) => {
  if (line.includes("SUPABASE_URL") || line.includes("SUPABASE_ANON_KEY")) {
    console.log(`   Zeile ${i + 1}: ${line}`);
  }
});
console.log("");

// SUPABASE_URL - Ersetze ALLE Vorkommen (auch in if-Bedingungen)
const beforeUrl = appJs.includes("DEIN_SUPABASE_URL");
// Verwende globales Regex mit g-Flag f√ºr ALLE Vorkommen
appJs = appJs.replace(/DEIN_SUPABASE_URL/g, SUPABASE_URL);
const afterUrl =
  appJs.includes(SUPABASE_URL) && !appJs.includes("DEIN_SUPABASE_URL");
console.log(
  "   SUPABASE_URL:",
  beforeUrl ? "üîç Platzhalter gefunden" : "‚ùå Platzhalter NICHT gefunden",
  "‚Üí",
  afterUrl ? "‚úÖ ersetzt" : "‚ùå FEHLER"
);

// SUPABASE_ANON_KEY - Ersetze ALLE Vorkommen
const beforeKey = appJs.includes("DEIN_SUPABASE_ANON_KEY");
appJs = appJs.replace(/DEIN_SUPABASE_ANON_KEY/g, SUPABASE_ANON_KEY);
const afterKey =
  appJs.includes(SUPABASE_ANON_KEY) &&
  !appJs.includes("DEIN_SUPABASE_ANON_KEY");
console.log(
  "   SUPABASE_ANON_KEY:",
  beforeKey ? "üîç Platzhalter gefunden" : "‚ùå Platzhalter NICHT gefunden",
  "‚Üí",
  afterKey ? "‚úÖ ersetzt" : "‚ùå FEHLER"
);

// STRIPE_PUBLISHABLE_KEY - Ersetze ALLE Vorkommen
appJs = appJs.replace(
  /DEIN_STRIPE_PUBLISHABLE_KEY/g,
  STRIPE_PUBLISHABLE_KEY || "DEIN_STRIPE_PUBLISHABLE_KEY"
);
console.log(
  "   STRIPE_PUBLISHABLE_KEY:",
  STRIPE_PUBLISHABLE_KEY ? "‚úÖ ersetzt" : "‚ö†Ô∏è nicht gesetzt"
);

// Ersetze Price IDs (flexibles Regex)
if (STRIPE_PRICE_BASIC) {
  appJs = appJs.replace(
    /basic:\s*"price_[A-Z_]+"[^\n]*/,
    `basic: "${STRIPE_PRICE_BASIC}",`
  );
  console.log("   STRIPE_PRICE_BASIC: ‚úÖ ersetzt");
} else {
  console.log("   STRIPE_PRICE_BASIC: ‚ö†Ô∏è nicht gesetzt");
}

if (STRIPE_PRICE_PREMIUM) {
  appJs = appJs.replace(
    /premium:\s*"price_[A-Z_]+"[^\n]*/,
    `premium: "${STRIPE_PRICE_PREMIUM}",`
  );
  console.log("   STRIPE_PRICE_PREMIUM: ‚úÖ ersetzt");
} else {
  console.log("   STRIPE_PRICE_PREMIUM: ‚ö†Ô∏è nicht gesetzt");
}

if (STRIPE_PRICE_ELITE) {
  appJs = appJs.replace(
    /elite:\s*"price_[A-Z_]+"[^\n]*/,
    `elite: "${STRIPE_PRICE_ELITE}",`
  );
  console.log("   STRIPE_PRICE_ELITE: ‚úÖ ersetzt");
} else {
  console.log("   STRIPE_PRICE_ELITE: ‚ö†Ô∏è nicht gesetzt");
}

// Verifiziere dass ALLE Ersetzungen funktioniert haben
const stillHasPlaceholders =
  appJs.includes("DEIN_SUPABASE_URL") ||
  appJs.includes("DEIN_SUPABASE_ANON_KEY") ||
  appJs.includes("DEIN_STRIPE_PUBLISHABLE_KEY");

if (stillHasPlaceholders) {
  console.error("\n‚ùå KRITISCHER FEHLER");
  console.error("Platzhalter wurden NICHT vollst√§ndig ersetzt!");
  console.error("\nüîç Verbleibende Platzhalter in folgenden Zeilen:");
  const lines = appJs.split("\n");
  lines.forEach((line, i) => {
    if (
      line.includes("DEIN_SUPABASE_URL") ||
      line.includes("DEIN_SUPABASE_ANON_KEY") ||
      line.includes("DEIN_STRIPE_PUBLISHABLE_KEY")
    ) {
      console.error(`   Zeile ${i + 1}: ${line.trim()}`);
    }
  });

  console.error("\n‚ö†Ô∏è Build wird abgebrochen!");
  process.exit(1);
}

console.log("‚úÖ Alle Platzhalter erfolgreich ersetzt!");

// Schreibe app.js in dist
fs.writeFileSync(path.join(distDir, "app.js"), appJs);
console.log("‚úÖ app.js erstellt");

// ============================================
// 4. SUCCESS.HTML VERARBEITEN
// >>> GLIEDERUNGSPUNKT 4: SUCCESS.HTML VERARBEITEN
// ============================================
console.log("\nüîß Verarbeite success.html...");

if (fs.existsSync(path.join(__dirname, "success.html"))) {
  let successHtml = fs.readFileSync(
    path.join(__dirname, "success.html"),
    "utf8"
  );

  // Ersetze die kompletten Zeilen mit Regex
  successHtml = successHtml.replace(
    /const SUPABASE_URL\s*=\s*['"].*?['"];/,
    `const SUPABASE_URL = "${SUPABASE_URL}";`
  );

  successHtml = successHtml.replace(
    /const SUPABASE_ANON_KEY\s*=\s*['"].*?['"];/,
    `const SUPABASE_ANON_KEY = "${SUPABASE_ANON_KEY}";`
  );

  fs.writeFileSync(path.join(distDir, "success.html"), successHtml);
  console.log("‚úÖ success.html erstellt");
} else {
  console.warn("‚ö†Ô∏è success.html nicht gefunden - wird √ºbersprungen");
}

// ============================================
// 5. HAUPTDATEIEN KOPIEREN
// >>> GLIEDERUNGSPUNKT 5: HAUPTDATEIEN KOPIEREN
// ============================================
console.log("\nüìÅ Kopiere Hauptdateien...");

const mainFiles = ["index.html", "styles.css", "viewer.html"];

mainFiles.forEach((file) => {
  if (fs.existsSync(path.join(__dirname, file))) {
    fs.copyFileSync(path.join(__dirname, file), path.join(distDir, file));
    console.log(`   ‚úÖ ${file} kopiert`);
  } else {
    console.warn(`   ‚ö†Ô∏è ${file} nicht gefunden`);
  }
});

// ============================================
// 6. DSGVO-SEITEN KOPIEREN
// >>> GLIEDERUNGSPUNKT 6: DSGVO-SEITEN KOPIEREN
// ============================================
console.log("\nüìÑ Kopiere DSGVO-Seiten...");

const legalFiles = [
  "impressum.html",
  "datenschutz.html",
  "cookies.html",
  "agb.html",
];

let copiedLegalFiles = 0;
legalFiles.forEach((file) => {
  if (fs.existsSync(path.join(__dirname, file))) {
    fs.copyFileSync(path.join(__dirname, file), path.join(distDir, file));
    console.log(`   ‚úÖ ${file} kopiert`);
    copiedLegalFiles++;
  } else {
    console.warn(`   ‚ö†Ô∏è ${file} nicht gefunden - sollte vorhanden sein!`);
  }
});

if (copiedLegalFiles < 4) {
  console.warn("\n‚ö†Ô∏è WARNUNG");
  console.warn(`Nur ${copiedLegalFiles}/4 DSGVO-Seiten gefunden!`);
  console.warn("Fehlende Seiten k√∂nnen zu rechtlichen Problemen f√ºhren.");
}

// ============================================
// 7. NETLIFY KONFIGURATION
// >>> GLIEDERUNGSPUNKT 7: NETLIFY KONFIGURATION
// ============================================
console.log("\n‚öôÔ∏è Erstelle Netlify-Konfiguration...");

// _redirects f√ºr Single Page Application
const redirectsContent = `/*  /index.html  200`;
fs.writeFileSync(path.join(distDir, "_redirects"), redirectsContent);
console.log("   ‚úÖ _redirects erstellt");

// netlify.toml (optional, aber empfohlen)
const netlifyToml = `# Netlify Konfiguration f√ºr FittiCoach

[build]
  publish = "dist"
  command = "node build.js"

[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Security Headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "geolocation=(), microphone=(), camera=()"

# Cache Headers f√ºr statische Assets
[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
`;

fs.writeFileSync(path.join(__dirname, "netlify.toml"), netlifyToml);
console.log("   ‚úÖ netlify.toml erstellt");

// ============================================
// 8. BUILD-ZUSAMMENFASSUNG
// >>> GLIEDERUNGSPUNKT 8: BUILD-ZUSAMMENFASSUNG
// ============================================
console.log("\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
console.log("‚úÖ Build erfolgreich abgeschlossen!");
console.log("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
console.log("\nüì¶ Build-Statistik:");
console.log("   dist/");
console.log("   ‚îú‚îÄ‚îÄ app.js");
console.log("   ‚îú‚îÄ‚îÄ index.html");
console.log("   ‚îú‚îÄ‚îÄ styles.css");
if (fs.existsSync(path.join(distDir, "viewer.html"))) {
  console.log("   ‚îú‚îÄ‚îÄ viewer.html");
}
if (fs.existsSync(path.join(distDir, "success.html"))) {
  console.log("   ‚îú‚îÄ‚îÄ success.html");
}
console.log("   ‚îÇ");
console.log("   ‚îú‚îÄ‚îÄ DSGVO-Seiten:");
if (fs.existsSync(path.join(distDir, "impressum.html"))) {
  console.log("   ‚îÇ   ‚îú‚îÄ‚îÄ impressum.html");
}
if (fs.existsSync(path.join(distDir, "datenschutz.html"))) {
  console.log("   ‚îÇ   ‚îú‚îÄ‚îÄ datenschutz.html");
}
if (fs.existsSync(path.join(distDir, "cookies.html"))) {
  console.log("   ‚îÇ   ‚îú‚îÄ‚îÄ cookies.html");
}
if (fs.existsSync(path.join(distDir, "agb.html"))) {
  console.log("   ‚îÇ   ‚îî‚îÄ‚îÄ agb.html");
}
console.log("   ‚îÇ");
console.log("   ‚îî‚îÄ‚îÄ _redirects");

console.log("\nüîë Environment Variables:");
console.log("   ‚úÖ SUPABASE_URL");
console.log("   ‚úÖ SUPABASE_ANON_KEY");
console.log(
  "   " +
    (STRIPE_PUBLISHABLE_KEY ? "‚úÖ" : "‚ö†Ô∏è") +
    " STRIPE_PUBLISHABLE_KEY" +
    (STRIPE_PUBLISHABLE_KEY ? "" : " (Demo-Modus)")
);
console.log(
  "   " +
    (STRIPE_PRICE_BASIC ? "‚úÖ" : "‚ö†Ô∏è") +
    " STRIPE_PRICE_BASIC" +
    (STRIPE_PRICE_BASIC ? "" : " (nicht gesetzt)")
);
console.log(
  "   " +
    (STRIPE_PRICE_PREMIUM ? "‚úÖ" : "‚ö†Ô∏è") +
    " STRIPE_PRICE_PREMIUM" +
    (STRIPE_PRICE_PREMIUM ? "" : " (nicht gesetzt)")
);
console.log(
  "   " +
    (STRIPE_PRICE_ELITE ? "‚úÖ" : "‚ö†Ô∏è") +
    " STRIPE_PRICE_ELITE" +
    (STRIPE_PRICE_ELITE ? "" : " (nicht gesetzt)")
);

console.log("\nüõ°Ô∏è DSGVO-Compliance:");
console.log(
  "   " +
    (copiedLegalFiles >= 4 ? "‚úÖ" : "‚ö†Ô∏è") +
    " Rechtsdokumente: " +
    copiedLegalFiles +
    "/4"
);
console.log("   ‚úÖ Cookie-Banner integriert");
console.log("   ‚úÖ Privacy-Checkbox in Registrierung");
console.log("   ‚úÖ Footer mit rechtlichen Links");

console.log("\nüìù N√§chste Schritte:");
console.log("   1. √úberpr√ºfe dist/ Ordner");
console.log("   2. Teste lokal: npx serve dist");
console.log("   3. Deploye auf Netlify");
console.log("   4. ‚ö†Ô∏è WICHTIG: Passe Impressum & Datenschutz an!");
console.log("\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n");
